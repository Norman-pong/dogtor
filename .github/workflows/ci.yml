name: CI

on:
  push:
    branches:
      - main
    paths:
      - '**/workflows/ci.yml'
      - 'apps/**'
      - 'packages/**'
      - 'docs/**'
  pull_request:
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'docs/**'

permissions:
  actions: read
  contents: read
  pages: write
  id-token: write

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      docs: ${{ steps.filter.outputs.docs }}
      code: ${{ steps.filter.outputs.code }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            docs:
              - 'apps/docs-site/**'
              - 'docs/**'
            code:
              - 'apps/**'
              - 'packages/**'
              - '!apps/docs-site/**'

  build:
    needs: changes
    if: needs.changes.outputs.code == 'true'
    runs-on: ubuntu-latest
    env:
      SKIP_FORMAT_CHECK: true  # 设置环境变量跳过格式化检查
      SKIP_LINT_CHECK: true    # 设置环境变量跳过语法检查
      CI: true                 # 标识 CI 环境
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.3.0'

      - name: Install dependencies
        run: bun install --frozen-lockfile --ignore-scripts

      # 跳过格式化检查（如果需要可以取消注释）
      # - name: Format check
      #   if: env.SKIP_FORMAT_CHECK != 'true'
      #   run: bun run fmt:check

      # 跳过语法检查（如果需要可以取消注释）
      # - name: Lint check
      #   if: env.SKIP_LINT_CHECK != 'true'
      #   run: bun run lint:check

      - name: Build projects
        run: bunx nx run-many --target=build --all --no-cloud

  docs-site:
    needs: changes
    if: needs.changes.outputs.docs == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.3.0'

      - name: Install dependencies
        run: bun install --frozen-lockfile --ignore-scripts

      - name: Build docs-site
        run: bunx nx run docs-site:build --no-cloud

      - name: Copy CNAME to build output
        run: cp CNAME ./apps/docs-site/doc_build/CNAME

      - name: Setup Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && success()
        uses: actions/configure-pages@v4
        with:
          enablement: true

      - name: Upload artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && success()
        uses: actions/upload-pages-artifact@v3
        with:
          path: './apps/docs-site/doc_build'

      - name: Deploy to GitHub Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && success()
        id: deployment
        uses: actions/deploy-pages@v4
